"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для третьего скрипта
"""
# Задача из Основ Питона.
# Реализовать класс Road (дорога).
# определить атрибуты: length (длина), width (ширина);
# значения атрибутов должны передаваться при создании экземпляра класса;
# атрибуты сделать защищёнными;
# определить метод расчёта массы асфальта, необходимого для покрытия всей дороги;
# использовать формулу: длина * ширина * масса асфальта для покрытия одного кв. метра дороги асфальтом, толщиной в 1 см * число см толщины полотна;
# проверить работу метода.
# Например: 20 м*5000 м*25 кг*5 см = 12500 т.

from pympler import asizeof


class Road:
    def __init__(self, lenght, width):
        self._lenght = lenght
        self._width = width

    def mass(self):
        return f'{self._lenght} м * {self._width} м * 25 кг * 5 см = {int(self._lenght * self._width * 25 * 5 / 1000)} т'

r_1 = Road(5000, 20)
print(r_1.__dict__)
print(f'Размер {asizeof.asizeof(r_1)}')     # 328


# Оптимизация через __slots__
class Road:
    __slots__ = ['_lenght', '_width']

    def __init__(self, lenght, width):
        self._lenght = lenght
        self._width = width

    def mass(self):
        return f'{self._lenght} м * {self._width} м * 25 кг * 5 см = {int(self._lenght * self._width * 25 * 5 / 1000)} т'

r_2 = Road(5000, 20)
print(r_2.__slots__)
print(f'Размер {asizeof.asizeof(r_2)}')     # 112

'''
Для оптимизации использованы слоты. Память удалось оптимизировать в ~3 раза. 
'''