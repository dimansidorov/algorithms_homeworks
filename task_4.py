"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

users_storage = {'ladiesman217': ['12345678', True],
                 'kinopoisk': ['12345678', False],
                 'champagnepapi': ['12345678', True],
                 'christiano7': ['12345678', False],
                 'novayagazeta': ['12345678', True],
                 'ladygaga': ['12345678', False],
                 'varlamov': ['12345678', False],
                 'vecherniy_urgant': ['12345678', True],
                 'geekbrains': ['12345678', True],
                 'yurydud': ['12345678', True],
                 'olegtinkov': ['12345678', True]
                 }


# O(n)
def get_authorized1(st):
    st = st.lower()     # Не нашел ничего по строкам
    if st not in users_storage:     # O(n)
        return 'Неверный логин. Проверьте правильность введенных вами данных или пройдите регистрацию.'    # O(n)
    password, flag = users_storage[login]   # O(1)
    if flag:    # O(1)
        print('Доступ разрешен. Аккаунт активирован.')  # O(1)
        user_pass = input('Введите пароль: ')
        while user_pass != password:    # O(n)
            print('Неверный пароль. Попробуйте еще раз.')   # O(1)
            user_pass = input('Введите пароль: ')
        return 'Авторизация прошла успешно'     # O(1)
    else:
        return 'Аккаунт не активирован. Пройдите активацию.'   # O(1)


# O(n**2)
def get_authorized2(st):
    st = st.lower()
    for key in users_storage.keys():
        if key == st:
            flag = False
            for i in users_storage[st]:
                if i == True:
                    flag = True
            if flag:  # O(1)
                print('Доступ разрешен. Аккаунт активирован.')  # O(1)
                password = users_storage[st][0]
                user_pass = input('Введите пароль: ')
                while user_pass != password:  # O(n)
                    print('Неверный пароль. Попробуйте еще раз.')  # O(1)
                    user_pass = input('Введите пароль: ')
                return 'Авторизация прошла успешно'  # O(1)
            else:
                return 'Аккаунт не активирован. Пройдите активацию.'

    return 'Неверный логин. Проверьте правильность введенных вами данных или пройдите регистрацию.'


login = input('Введите логин: ')
print(get_authorized1(login))
print(get_authorized2(login))

# Первый вариант гораздо эффективнее, так как не обременен вложенными циклами.